name: Tests & Checks

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

defaults:
  run:
    working-directory: openmls

jobs:
  macos-tests:
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-apple-darwin
          - aarch64-apple-darwin
          - aarch64-apple-ios
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Setup MacOS
        run: |
          brew install pkg-config
          sudo rm -Rf /Library/Developer/CommandLineTools/SDKs/*
          sudo xcode-select -s /Applications/Xcode_12.4.app
          rustup target install aarch64-apple-darwin
          rustup target install aarch64-apple-ios
      - name: Tests debug build
        run: |
          cargo test --target ${{ matrix.target }} --verbose
      - name: Tests release build
        run: |
          cargo test --target ${{ matrix.target }} --verbose --release
  linux-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          # 64-bit Linux
          - target: x86_64-unknown-linux-gnu
            rust: stable
          # 32-bit Linux
          - target: i686-unknown-linux-gnu
            rust: stable
            deps: sudo apt update && sudo apt install gcc-multilib
          # wasm
          - target: wasm32-unknown-unknown
            rust: stable
          # ARM64 Linux
          - target: aarch64-linux-android
            rust: stable
            deps: sudo apt update && sudo apt install gcc-aarch64-linux-gnu
            rustflags: "-C linker=aarch64-linux-gnu-gcc"
          # ARM64 Android
          - target: aarch64-linux-android
            rust: stable
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          profile: minimal
          override: true
      - run: ${{ matrix.deps }}
      - name: Tests debug build
        env:
          RUSTFLAGS: ${{ matrix.rustflags }}
        run: |
          cargo test --target ${{ matrix.target }} --verbose
      - name: Tests release build
        env:
          RUSTFLAGS: ${{ matrix.rustflags }}
        run: |
          cargo test --target ${{ matrix.target }} --verbose --release
  windows-tests:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-pc-windows-msvc
          - i686-pc-windows-msvc
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          profile: minimal
          override: true
      - name: Tests debug build
        run: |
          cargo test --target ${{ matrix.target }} --verbose
      - name: Tests release build
        run: |
          cargo test --target ${{ matrix.target }} --verbose --release
  checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Stable with rustfmt and clippy
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy
      - name: Clippy warnings
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --manifest-path openmls/Cargo.toml
      - name: Cargo fmt
        run: cargo fmt -- --check
