name: Tests & Checks

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

defaults:
  run:
    working-directory: openmls

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Tests debug build
        run: |
          cargo test --verbose
      - name: Tests release build
        run: |
          cargo test --verbose --release
        # Test 32 bit builds on linux and windows
      - name: Tests 32bit windows debug build
        if: matrix.os == 'windows-latest'
        run: |
      - name: Tests 32bit windows release build
        if: matrix.os == 'windows-latest'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: i686-pc-windows-msvc
        run: |
          cargo test --verbose --target i686-pc-windows-msvc
          cargo test --verbose --release --target i686-pc-windows-msvc
      - name: Tests 32bit linux debug build
        if: matrix.os == 'ubuntu-latest'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: i686-pc-windows-msvc
        run: |
          sudo apt update && sudo apt install gcc-multilib
          cargo test --verbose --target i686-unknown-linux-gnu
          cargo test --verbose --release --target i686-unknown-linux-gnu
  checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Stable with rustfmt and clippy
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy
      - name: Clippy warnings
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --manifest-path openmls/Cargo.toml
      - name: Cargo fmt
        run: cargo fmt -- --check
